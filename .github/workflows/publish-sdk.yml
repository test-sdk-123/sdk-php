name: Publish SDK on Release Merge

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  publish-php:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from branch name
        id: extract_version
        run: |
          BRANCH="${{ github.event.pull_request.head.ref }}"
          VERSION="${BRANCH#release/v}"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Create and push tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "v${{ steps.extract_version.outputs.VERSION }}" -m "Release v${{ steps.extract_version.outputs.VERSION }}"
          git push origin "v${{ steps.extract_version.outputs.VERSION }}"

      - name: Trigger Packagist Update
        run: |
          # Get repository URL from environment variables
          REPO_URL="${{ vars.PACKAGIST_REPO_URL }}"
          USERNAME="${{ vars.PACKAGIST_USERNAME || 'piotr.kusiak@innodia.pl' }}"

          # Default to GitHub repository if still not set
          if [ -z "$REPO_URL" ]; then
            REPO_URL="https://github.com/${{ github.repository }}"
          fi

          echo "Using repository URL: $REPO_URL"
          echo "Using username: $USERNAME"

          curl -X POST             -H "Content-Type: application/json"             -d "{"repository": {"url": "$REPO_URL"}}"             "https://packagist.org/api/github?username=$USERNAME"
        env:
          PACKAGIST_SECRET: ${{ secrets.PACKAGIST_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.extract_version.outputs.VERSION }}
          release_name: Release v${{ steps.extract_version.outputs.VERSION }}
          body: |
            ## ðŸš€ SDK v${{ steps.extract_version.outputs.VERSION }} Released

            ### Installation
            ```bash
            composer require getbrand/sdk:^${{ steps.extract_version.outputs.VERSION }}
            ```

            ### Changes
            This release has been automatically published to Packagist.
          draft: false
          prerelease: false